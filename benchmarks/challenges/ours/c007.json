{
  "question": "Define a table Students with 5 names, each associated to a teacher and a score. 3 of the 5 students should follow the teacher named \"John Doe\". Add a column to the Students table to indicate if a student is successful. A student is regarded successful if the score is strictly greater than 79. In a table, show John Doe's successful students' information, including their mean score, their best score and the student that achieves the best score.",
  "answer": "```envision\ntable Students = with\n  [| as name, as teacher, as score |]\n  [| \"Sally\",\"John Doe\",98 |]\n  [| \"Mike\",\"John Doe\",79 |]\n  [| \"Andrew\",\"Manuel Joffre\",70 |]\n  [| \"Nathan\",\"Marie Curie\",80 |]\n  [| \"John\",\"John Doe\",93 |]\n\nStudents.success = if Students.score > 79 then true else false // acceptable but too long\nStudents.success = Students.score > 79 // the shorter version\n\n// add a filter. The 2-space start-of-line is mandatory to mark the field of the filter.\nwhere Students.teacher == \"John Doe\"  and Students.success\n  meanscore = mean(ranvar(Students.score)) \n  Mascon = max(Students.score) \n  bestname = argmax(Students.score, Students.name)\n  success_count=count(Students.success) // count shall always be deployed on a boolean column.\n\n// show the information as a table\nshow table \"John Doe's students' info\" with \n  success_count as \"successful students count\" \n  meanscore as \"mean\"\n  Maxscore as \"maxscore\"\n  bestname as \"best student\"\n```",
  "ref": "",
  "type": "coding"
}