///02-desc
///The desc keyword is an option for a process call. When desc is present, the ordering of the iteration is inverted.
///When the scan takes a tuple, the desc option can be indepently applied to every element of the tuple, i.e. scan [a desc, b, c desc].

///The desc keyword is an option for a table tile block. When desc is present, the ordering of the table is inverted.
///When the order by takes a tuple as argument, the desc keyword can remain outside the tuple: order by [a, b, c] desc
///or applied individually inside the tuple to offer an ordering control over each element that makes the tuple: order by [a desc, b, c desc].

///Considering the table Items as given below:
/// table Items = with
///   [| as Item,         as Cost|]
///   [| "Tango",         90     |]
///   [| "Observer ward", 0      |]
///   [| "Bracer",        505    |]
///   [| "Reaver",        2700   |]
///   [| "Divine rapier", 5600   |]
///Rank the Items according to their Cost from the cheapest to the most expensive i.e rank 1 being the cheapest.
///You must use the rankrev function. Display the table Items sorted by ascending rank


///ANSWER
table Items = with
  [| as Item,         as Cost|]
  [| "Tango",         90     |]
  [| "Observer ward", 0      |]
  [| "Bracer",        505    |]
  [| "Reaver",        2700   |]
  [| "Divine rapier", 5600   |]

Items.Rk = rankrev() scan [Items.Cost desc] //rankrev() is ranking by descending order hence rankrev() scan [... desc] is ranking by ascending order!

show table "Items" with
  Items.Rk
  Items.Item
  Items.Cost
  order by Items.Rk
