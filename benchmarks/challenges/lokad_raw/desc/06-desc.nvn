///06-desc
///The desc keyword is an option for a process call. When desc is present, the ordering of the iteration is inverted.
///When the scan takes a tuple, the desc option can be indepently applied to every element of the tuple, i.e. scan [a desc, b, c desc].

///The desc keyword is an option for a table tile block. When desc is present, the ordering of the table is inverted.
///When the order by takes a tuple as argument, the desc keyword can remain outside the tuple: order by [a, b, c] desc
///or applied individually inside the tuple to offer an ordering control over each element that makes the tuple: order by [a desc, b, c desc].

///1. Can you enumerate the Items in the order in which they will appear in the table following the script below?
///2a. What if instead of rank, the rankrev function was used? How could you have written the show in a different
///way to achieve the same result?

table Items = with
  [| as Item,         as Cost,  as Damage,  as Strength      |]
  [| "Tango",         90     ,    0       ,  0               |]
  [| "Observer ward", 0      ,    0       ,  0               |]
  [| "Bracer",        505    ,    0       ,  5               |]
  [| "Reaver",        2700   ,    0       ,  25              |]
  [| "Divine rapier", 5600   ,    100     ,  0               |]

Items.Rk = rankrev() scan [Items.Strength desc, Items.Cost desc, Items.Damage]

show table "Items" with
  Items.Rk
  Items.Item
  Items.Damage
  Items.Strength
  Items.Cost
  order by Items.Rk desc


///ANSWER
///1. Observer ward > Tango > Divine rapier > Bracer > Reaver
///2a. Reaver > Bracer > Divine rapier > Tango > Observer ward
///2b.
//show table "Items" with
  // Items.Rk
  // Items.Item
  // Items.Damage
  // Items.Strength
  // Items.Cost
  // order by Items.Rk ///removing the desc here yield the same result as using rankrev() instead of rank()
